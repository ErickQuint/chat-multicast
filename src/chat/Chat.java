package chat;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

public class Chat extends javax.swing.JFrame {

    static private String user = "";
    static private List<String> listaConectados;
    static private DefaultListModel modelo;
    static private String textoChat = "";
    static private String privateTo = "";
    static private String senderUser;
    static private String men;
    static MulticastSocket s;

    public static final String AMOREMOTE = ":o";
    public static final String RISAEMOTE = ":\\)";
    public static final String ENOJOAMOTE = ":S";
    public static final String LOCOEMOTE = "_loco_";
    public static final String HOMEROEMOTE = "_Homero_";

    public static final String AMOR = "<img width=\"60\" height=\"50\" src=\"file:C:/Users/erick/Documents/Redes 2/Chat/src/Resources/amor.png\"></img>";
    public static final String ENOJO = "<img width=\"60\" height=\"50\" src=\"file:C:/Users/erick/Documents/Redes 2/Chat/src/Resources/enojo.png\"></img>";
    public static final String RISA = "<img width=\"60\" height=\"50\" src=\"file:C:/Users/erick/Documents/Redes 2/Chat/src/Resources/risa.png\"></img>";
    public static final String LOCO = "<img width=\"60\" height=\"50\" src=\"file:C:/Users/erick/Documents/Redes 2/Chat/src/Resources/loco.gif\"></img>";
    public static final String HOMERO = "<img width=\"60\" height=\"50\" src=\"http://tusimagenesde.com/wp-content/uploads/2015/01/gifs-animados-5.gif\"></img>";

    public Chat() {
        listaConectados = new ArrayList<>();
    }

    public Chat(String name) {
        if (name != null) {
            setNombreC(name);
            initComponents();

            this.setBounds(0, 0, 767, 520);
            this.setBackground(Color.black);

            txtChat.setContentType("text/html");
            txtChat.setEditable(false);
            txtChat.setText("");

            txtEstado.setText(getNombreC());

            //inicioCliente();
            txtEstado.setText("Usuario: " + user);

            listConectados.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent evt) {
                    JList list = (JList) evt.getSource();
                    if (evt.getClickCount() == 2) {
                        int index = list.locationToIndex(evt.getPoint());
                        privateTo = (String) modelo.getElementAt(index);
                        String texto = JOptionPane.showInputDialog("Mensaje privado a " + privateTo);
                        if (texto != null) {
                            EnviarMensaje("<privado><" + user + "><" + privateTo + ">" + texto);
                        }
                    }
                }
            });
        }
    }

    private void EnviarMensaje(String men) {
        byte[] b = men.getBytes();
        try {
            InetAddress gpo = InetAddress.getByName("230.1.1.1");
            DatagramPacket p = new DatagramPacket(b, b.length, gpo, 4000);
            s.send(p);
        } catch (UnknownHostException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        txtEstado = new javax.swing.JLabel();
        txtEnvia = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtChat = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(774, 476));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        txtEstado.setBackground(new java.awt.Color(255, 0, 51));
        txtEstado.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        txtEstado.setText("Desconectado");
        getContentPane().add(txtEstado);
        txtEstado.setBounds(18, 43, 406, 21);
        getContentPane().add(txtEnvia);
        txtEnvia.setBounds(0, 399, 508, 39);

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnviar);
        btnEnviar.setBounds(516, 405, 235, 33);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel1.setText("Usuarios conectados");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(519, 14, 210, 24);

        jScrollPane1.setAutoscrolls(true);

        txtChat.setContentType("txt/html");
        txtChat.setSelectionColor(new java.awt.Color(255, 64, 129));
        jScrollPane1.setViewportView(txtChat);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 81, 508, 312);

        listConectados.setBackground(new java.awt.Color(204, 255, 255));
        listConectados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        listConectados.setFont(new java.awt.Font("Franklin Gothic Medium", 2, 12)); // NOI18N
        listConectados.setForeground(new java.awt.Color(0, 102, 102));
        jScrollPane2.setViewportView(listConectados);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(514, 81, 235, 130);

        jLabel3.setBackground(new java.awt.Color(255, 0, 51));
        jLabel3.setFont(new java.awt.Font("Dialog", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Mensaje Privado");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(514, 43, 190, 32);
        jLabel3.getAccessibleContext().setAccessibleName("Mensaje Privado");

        pack();
    }// </editor-fold>                        

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {
        String texto = txtEnvia.getText();
        EnviarMensaje("<msj><" + user + ">" + texto);
        txtEnvia.setText("");
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        EnviarMensaje("<fin>" + user);
        System.exit(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        String nombreT = JOptionPane.showInputDialog(null, "Ingresa tu nombre:");
        java.awt.EventQueue.invokeLater(() -> {
            new Chat(nombreT).setVisible(true);
        });

        Chat c = new Chat();
        c.inicioCliente();
    }

    public void inicioCliente() {
        InetAddress gpo;
        try {
            s = new MulticastSocket(4000);
            s.setReuseAddress(true);
            s.setTimeToLive(1);

            gpo = InetAddress.getByName("230.1.1.1");
            s.joinGroup(gpo);

            String msj = "<inicio>" + user;

            byte[] b = msj.getBytes();

            DatagramPacket p = new DatagramPacket(b, b.length, gpo, 4000);
            s.send(p);

            for (;;) {
                DatagramPacket q = new DatagramPacket(new byte[100], 100);
                s.receive(q);
                men = new String(q.getData());

                String str = "";

                char arr[] = men.toCharArray();

                for (char c : arr) {
                    if (c != '\0') {
                        str += c;
                    }
                }

                if (men.contains("<msj>")) {
                    reemplazar();

                    senderUser = men.split("<")[2].split(">")[0];
                    textoChat = textoChat + "<br/><br/><b>" + senderUser + "</b>:<br/>" + men;

                    txtChat.setText(textoChat);
                } else if (men.contains("<privado>") && men.contains(user)) {
                    senderUser = men.split("<")[2].replace(">", "");

                    reemplazar();

                    textoChat = textoChat + "<div><b>Mensaje privado de " + senderUser + "</b>:<br/>" + men + "</div>";
                    txtChat.setText(textoChat);

                } else if (men.contains("<fin>")) {
                    String r = Integer.toHexString(231);
                    String g = Integer.toHexString(76);
                    String bc = Integer.toHexString(90);
                    String color = r + g + bc;

                    senderUser = str.replace("<fin>", "");

                    textoChat = textoChat + "<div style=\"color:#" + color + "\"><h3><b>''" + senderUser + "'' se ha desconectado</b></h3><br/></div>";
                    txtChat.setText(textoChat);

                    listaConectados.remove(listaConectados.indexOf(senderUser));
                    actualizarLista();
                }

                String replace = str.replace("<inicio>", "");

                if (str.contains("<inicio>") && !str.equals(msj) && !listaConectados.contains(replace)) {
                    p = new DatagramPacket(b, b.length, gpo, 4000);
                    s.send(p);

                    listaConectados.add(replace);
                    actualizarLista();
                }
                Thread.sleep(300);

            }//for
        } catch (Exception e) {
            e.printStackTrace();
        }//catch
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnEnviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    static private javax.swing.JList listConectados = new javax.swing.JList();
    static public javax.swing.JEditorPane txtChat;
    private javax.swing.JTextField txtEnvia;
    private javax.swing.JLabel txtEstado;
    // End of variables declaration                   

    public void setNombreC(String nombreC) {
        this.user = nombreC;
    }

    public String getNombreC() {
        return user;
    }

    private void reemplazar() {
        men = men.replaceAll(AMOREMOTE, AMOR);
        men = men.replaceAll(ENOJOAMOTE, ENOJO);
        men = men.replaceAll(RISAEMOTE, RISA);
        men = men.replaceAll(LOCOEMOTE, LOCO);
        men = men.replaceAll(HOMEROEMOTE, HOMERO);
    }

    private void actualizarLista() {
        modelo = new DefaultListModel();
        listConectados.removeAll();

        for (String u : listaConectados) {
            modelo.addElement(u);
        }
        listConectados.setModel(modelo);
    }
}
